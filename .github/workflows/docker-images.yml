###########
# ENV VARS:
# - DOCKER_USERNAME
# - DOCKER_PASSWORD
# - GITHUB_TOKEN (default)
###########

name: Docker Image CI

on:
  push:
    paths:
      - 'release-versions/*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get current repository
        uses: actions/checkout@v1
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(cat release-versions/n8n-latest.txt)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: cp default-requirements.txt images/n8n/requirements.txt
      - name: Build (default => alpine)
        uses: docker/build-push-action@v2
        with:
          context: ./images/n8n
          build-args: |
            N8N_VERSION=${{steps.vars.outputs.tag}}
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/n8n-python:${{ steps.vars.outputs.tag }}
            ghcr.io/${{ github.actor }}/n8n-python:latest

      - run: cp default-requirements.txt images/n8n-debian/requirements.txt
      - name: Build (debian)
        uses: docker/build-push-action@v2
        with:
          context: ./images/n8n-debian
          build-args: |
            N8N_VERSION=${{ steps.vars.outputs.tag }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.actor }}/n8n-python:${{ steps.vars.outputs.tag }}-debian
            ghcr.io/${{ github.actor }}/n8n-python:latest-debian
